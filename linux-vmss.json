{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "adminUsername": {
            "type": "string",
            "defaultValue": "ashuser",
            "metadata": {
                "description": "User name for the Virtual Machine."
            }
        },
        "authenticationType": {
            "type": "string",
            "defaultValue": "Password",
            "allowedValues": [
                "Password",
                "sshPublicKey"
            ]
        },
        "adminPassword": {
            "type": "securestring",
            "defaultValue": "Ashpassword123",
            "metadata": {
                "description": "Password for the Virtual Machine."
            }
        },
        "sshPublicKey": {
            "type": "string",
            "defaultValue": ""
        },
        "vmScaleSetCapacity": {
            "type": "int",
            "defaultValue": 2
        }
    },
    "variables": {
        "namePrefix": "[concat('eth-',variables('uniqString2'),'-')]",
        "uniqString": "ss",
        "uniqString2": "[toLower(substring(uniqueString(resourceGroup().id), 0, 4))]",
        "location": "[resourceGroup().location]",
        "nicName": "[concat(variables('namePrefix'),'nic')]",
        "addressPrefix": "10.0.0.0/16",
        "subnetName": "Subnet",
        "subnetPrefix": "10.0.0.0/24",
        "storageAccountType": "Standard_LRS",
        "lbpublicIPAddressName": "[concat(variables('namePrefix'),'lbpip')]",
        "publicIPAddressName": "[concat(variables('namePrefix'),'-pip')]",
        "nicNameext": "[concat(variables('namePrefix'),'-extNic')]",
        "nicNameext1": "[concat(variables('namePrefix'),'-extNica2')]",
        "nicNameext2": "[concat(variables('namePrefix'),'-extNica3')]",
        "publicIPAddressType": "Dynamic",
        "vmssName": "[concat(variables('namePrefix'),'vmss')]",
        "nodeVMSize": "Standard_A1",
        "virtualNetworkName": "[concat(variables('namePrefix'),'vnet')]",
        "ipConfigName": "vmIpConfig",
        "loadBalancerName": "[concat(variables('namePrefix'),'lb')]",
        "loadBalancerBackendAddressPoolName": "lbBePool",
        "loadBalancerInboundNatRuleNamePrefix": "ssh-vm",
        "lbID": "[resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName'))]",
        "lbFrontEndIpConfigName": "LoadBalancerFrontEnd",
        "lbFrontEndIPConfigID": "[concat(variables('lbID'),'/frontendIPConfigurations/',variables('lbFrontEndIpConfigName'))]",
        "lbBackendAddressPoolID": "[concat(variables('lbID'), '/backendAddressPools/', variables('loadBalancerBackendAddressPoolName'))]",
        "lbNatRulePoolID": "[concat(variables('lbID'), '/inboundNatPools/',variables('loadBalancerInboundNatRuleNamePrefix'))]",
        "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
        "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
        "baseUrl": "",
        "ubuntuImage": {
            "publisher": "Canonical",
            "offer": "UbuntuServer",
            "sku": "16.04.0-LTS",
            "version": "latest"
        },
        "osProfilepassword": {
            "computerNamePrefix": "vm",
            "adminUsername": "[parameters('adminUsername')]",
            "adminPassword": "[parameters('adminPassword')]"
        },
        "sshKeyPath": "[concat('/home/',parameters('adminUsername'),'/.ssh/authorized_keys')]",
        "osProfilesshPublicKey": {
            "computerNamePrefix": "vm",
            "adminUsername": "[parameters('adminUsername')]",
            "adminPassword": "[parameters('adminPassword')]",
            "linuxConfiguration": {
                "disablePasswordAuthentication": true,
                "ssh": {
                    "publicKeys": [
                        {
                            "path": "[variables('sshKeyPath')]",
                            "keyData": "[parameters('sshPublicKey')]"
                        }
                    ]
                }
            }
        },
        "osProfileReference": "[variables(concat('osProfile', parameters('authenticationType')))]"
    },
    "resources": [
        {
            "apiVersion": "2017-03-01",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('lbpublicIPAddressName')]",
            "location": "[variables('location')]",
            "properties": {
                "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
                "dnsSettings": {
                    "domainNameLabel": "[concat('lb-',variables('uniqString2'))]"
                }
            }
        },
        {
            "apiVersion": "2017-03-01",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('publicIPAddressName')]",
            "location": "[variables('location')]",
            "properties": {
                "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
                "dnsSettings": {
                    "domainNameLabel": "[concat('dns-',variables('uniqString2'))]"
                }
            }
        },
        {
            "apiVersion": "2017-03-01",
            "name": "[variables('loadBalancerName')]",
            "type": "Microsoft.Network/loadBalancers",
            "location": "[variables('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', variables('lbPublicIPAddressName'))]",
                "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
            ],
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "[variables('lbFrontEndIpConfigName')]",
                        "properties": {
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('lbpublicIPAddressName'))]"
                            },
                            "privateIPAllocationMethod": "Dynamic"
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "[variables('loadBalancerBackendAddressPoolName')]"
                    }
                ],
                "loadBalancingRules": [],
                "probes": [],
                "inboundNatPools": [
                    {
                        "name": "[variables('loadBalancerInboundNatRuleNamePrefix')]",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[variables('lbFrontEndIPConfigID')]"
                            },
                            "protocol": "tcp",
                            "frontendPortRangeStart": 2200,
                            "frontendPortRangeEnd": 2250,
                            "backendPort": 22
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2017-03-01",
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('virtualNetworkName')]",
            "location": "[variables('location')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('addressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('subnetName')]",
                        "properties": {
                            "addressPrefix": "[variables('subnetPrefix')]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachineScaleSets",
            "name": "[variables('vmssName')]",
            "location": "[variables('location')]",
            "apiVersion": "2017-03-30",
            "dependsOn": [
                "[resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName'))]"
            ],
            "sku": {
                "name": "[variables('nodeVMSize')]",
                "tier": "Standard",
                "capacity": "[parameters('vmScaleSetCapacity')]"
            },
            "properties": {
                "singlePlacementGroup": true,
                "overprovision": true,
                "upgradePolicy": {
                    "mode": "Manual"
                },
                "virtualMachineProfile": {
                    "storageProfile": {
                        "osDisk": {
                            "createOption": "FromImage",
                            "caching": "ReadWrite",
                            "managedDisk": {
                                "storageAccountType": "[variables('storageAccountType')]"
                            }
                        },
                        "imageReference": "[variables('ubuntuImage')]"
                    },
                    "osProfile": "[variables('osProfileReference')]",
                    "networkProfile": {
                        "networkInterfaceConfigurations": [
                            {
                                "name": "[variables('nicName')]",
                                "properties": {
                                    "primary": true,
                                    "ipConfigurations": [
                                        
                                        {
                                            "name": "[variables('ipConfigName')]",
                                            "privateIPAllocationMethod": "Static",
                                            "properties": {
                                                "subnet": {
                                                    "id": "[variables('subnetRef')]"
                                                },
                                                "loadBalancerBackendAddressPools": [
                                                    {
                                                        "id": "[variables('lbBackendAddressPoolID')]"
                                                    }
                                                ],
                                                "loadBalancerInboundNatPools": [
                                                    {
                                                        "id": "[variables('lbNatRulePoolID')]"
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "extensionProfile": {
                        "extensions": [
                            {
                                "name": "newscript",
                                "properties": {
                                    "publisher": "Microsoft.Azure.Extensions",
                                    "type": "CustomScript",
                                    "typeHandlerVersion": "2.0",
                                    "autoUpgradeMinorVersion": true,
                                    "settings": {
                                        "fileUris": [
                                            "https://raw.githubusercontent.com/ashwinse/test-base/master/sampleScript.sh"
                                        ]
                                    },
                                    "protectedSettings": {
                                        "commandToExecute": "[concat('sh sampleScript.sh \"file1\" \"file2\" \"file3\"')]"
                                    }
                                }
                            }
                        ]
                    }
                }
            }
        }
    ],
    "outputs": {
        "vnetObject": {
            "type": "object",
            "value": "[reference(variables('virtualNetworkName'))]"
        },
        "subnetObject": {
            "type": "object",
            "value": "[reference(concat('Microsoft.Network/virtualNetworks/',variables('virtualNetworkName'),'/subnets/',variables('subnetName')),'2017-03-01')]"
        },
        "lbObject": {
            "type": "object",
            "value": "[reference(variables('loadBalancerName'))]"
        },
        "lbbeObject": {
            "type": "object",
            "value": "[reference(concat('Microsoft.Network/loadBalancers/',variables('loadBalancerName'),'/backendAddressPools/',variables('loadBalancerBackendAddressPoolName')),'2017-03-01')]"
        },
        "pipObject": {
            "type": "object",
            "value": "[reference(variables('lbpublicIPAddressName'))]"
        },
        "RGObject": {
            "type": "object",
            "value": "[resourceGroup()]"
        },
        "DepObject": {
            "type": "object",
            "value": "[deployment()]"
        },
        "nicVmssbeObject": {
            "type": "array",
            "value": [
                "[reference(concat('Microsoft.Compute/virtualMachineScaleSets/',variables('vmssName'),'/virtualMachines/0/networkInterfaces/',variables('nicName')),'2017-03-30').ipConfigurations[0].properties.privateIPAddress]",
                "[reference(concat('Microsoft.Compute/virtualMachineScaleSets/',variables('vmssName'),'/virtualMachines/1/networkInterfaces/',variables('nicName')),'2017-03-30').ipConfigurations[0].properties.privateIPAddress]",
                "[reference(concat('Microsoft.Compute/virtualMachineScaleSets/',variables('vmssName'),'/virtualMachines/2/networkInterfaces/',variables('nicName')),'2017-03-30').ipConfigurations[0].properties.privateIPAddress]"
            ]
        }
    }
}
